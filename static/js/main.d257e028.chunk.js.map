{"version":3,"sources":["components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js"],"names":["Title","styled","h1","SectionPhonebook","section","Section","title","children","PhonebookForm","form","PhonebookLabel","label","PhonebookInput","input","PhonebookButton","button","ContactForm","state","name","number","nameInputId","shortid","generate","handleChange","e","currentTarget","value","setState","handleOnSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","id","type","onChange","pattern","required","telInputId","Component","ContactListStyled","ul","ContactItemStyled","li","ContactInfoStyled","p","ContactButton","ContactList","items","onDeleteContact","map","item","onClick","FilterLabel","FilterInput","Filter","TitleContacts","h2","ContainerContacts","div","Container","App","contacts","filter","addContact","newContact","find","contact","toLocaleLowerCase","toast","success","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","prevProps","console","log","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d257e028.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  padding: 20px;\n  text-transform: uppercase;\n  font-size: 24px;\n  color: #5c6368;\n`;\n\nconst SectionPhonebook = styled.section`\n  text-align: center;\n  width: 400px;\n  margin: 30px auto;\n\n  border: 1px solid grey;\n  border-radius: 2%;\n\n  background: white;\n  box-shadow: -1px 15px 30px -12px black;\n  z-index: 9999;\n`;\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionPhonebook>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionPhonebook>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport shortid from 'shortid';\n\nconst PhonebookForm = styled.form`\n  width: 300px;\n  margin: 0 auto;\n  padding: 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nconst PhonebookLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  padding: 12px 16px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n\n  resize: none;\n  margin-bottom: 12px;\n`;\n\nconst PhonebookInput = styled.input`\n  padding: 4px 12px;\n  width: 240px;\n  margin-top: 5px;\n  font: inherit;\n  line-height: 12px;\n  letter-spacing: 0.01em;\n`;\n\nconst PhonebookButton = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n\n  width: 100%;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 12px 24px;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, number, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n      [number]: value,\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <PhonebookForm onSubmit={this.handleOnSubmit}>\n        <PhonebookLabel htmlFor={this.nameInputId}>\n          Name\n          <PhonebookInput\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </PhonebookLabel>\n        <PhonebookLabel htmlFor={this.telInputId}>\n          Number\n          <PhonebookInput\n            id={this.telInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </PhonebookLabel>\n        <PhonebookButton type=\"submit\">Add contact</PhonebookButton>\n      </PhonebookForm>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ContactListStyled = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  width: 300px;\n  margin: 20px auto;\n\n  padding: 12px 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst ContactItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  width: 270px;\n  margin: 5px auto;\n\n  padding: 12px 16px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst ContactInfoStyled = styled.p`\n  margin-left: 4px;\n`;\n\nconst ContactButton = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n\n  width: auto;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 6px;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport default function ContactList({ items, onDeleteContact }) {\n  return (\n    <ContactListStyled>\n      {items.map(item => (\n        <ContactItemStyled key={item.id}>\n          <ContactInfoStyled>{item.name + ':'}</ContactInfoStyled>\n          <ContactInfoStyled>{item.number}</ContactInfoStyled>\n          <ContactButton type=\"button\" onClick={() => onDeleteContact(item.id)}>\n            Удалить\n          </ContactButton>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n}\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst FilterLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  width: 300px;\n  margin: 0 auto;\n\n  padding: 12px 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst FilterInput = styled.input`\n  padding: 4px 12px;\n  width: 270px;\n  margin-top: 5px;\n  font: inherit;\n  line-height: 12px;\n  letter-spacing: 0.01em;\n`;\n\nconst Filter = ({ value, onChange }) => (\n  <FilterLabel>\n    Find contacts by name\n    <FilterInput type=\"text\" value={value} onChange={onChange} />\n  </FilterLabel>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TitleContacts = styled.h2`\n  padding: 10px;\n  text-transform: uppercase;\n  font-size: 20px;\n  color: #5c6368;\n`;\n\nconst ContainerContacts = styled.div`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Container = ({ title, children }) => (\n  <ContainerContacts>\n    {title && <TitleContacts>{title}</TitleContacts>}\n    {children}\n  </ContainerContacts>\n);\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport shortid from 'shortid';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (\n      this.state.contacts.find(\n        contact =>\n          contact.name.toLocaleLowerCase() === newContact.name.toLocaleLowerCase() ||\n          contact.number === newContact.number,\n      )\n    ) {\n      return toast.success(`${newContact.name} is already in contacts!`);\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('update contacts');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      console.log(parsedContacts);\n\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Toaster />\n          <ContactForm onSubmit={this.addContact} />\n          <Container title=\"Contacts\">\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList items={visibleContacts} onDeleteContact={this.deleteContact} />\n          </Container>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}